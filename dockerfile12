# syntax=docker/dockerfile:experimental
FROM python:3.12
RUN apt-get update && apt-get -y --no-install-recommends install libgomp1
ENV APP_HOME /app
# install Java
RUN mkdir -p /usr/share/man/man1 && \
  apt-get update -y && \
  apt-get install -y openjdk-17-jre-headless
# install essential packages
RUN apt-get install -y \
  libxml2-dev libxslt-dev \
  build-essential libmagic-dev
# install tesseract
RUN apt-get install -y \
  tesseract-ocr \
  lsb-release \
  && echo "deb https://notesalexp.org/tesseract-ocr5/$(lsb_release -cs)/ $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/notesalexp.list > /dev/null \
  && apt-get update -oAcquire::AllowInsecureRepositories=true \
  && apt-get install notesalexp-keyring -oAcquire::AllowInsecureRepositories=true -y --allow-unauthenticated \
  && apt-get update \
  && apt-get install -y \
  tesseract-ocr libtesseract-dev \
  && wget -P /usr/share/tesseract-ocr/5/tessdata/ https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata
RUN apt-get install unzip -y && \
  apt-get install git -y && \
  apt-get autoremove -y
WORKDIR ${APP_HOME}
COPY . ./


RUN pip install --upgrade pip setuptools
RUN apt-get install -y libmagic1

RUN pip install boto3
RUN pip install .

RUN python -m nltk.downloader stopwords
RUN python -m nltk.downloader punkt
RUN python -c "import tiktoken; tiktoken.get_encoding(\"cl100k_base\")"
RUN chmod +x run.sh

ENV TIKA_SERVER_JAR=/app/jars/tika-server.jar
ENV TIKA_PATH=/app/jars/

# Adapt to AWS lambda
RUN pip install awslambdaric
# Set runtime interface client as default command for the container runtime
ENTRYPOINT ["/usr/local/bin/python", "-m", "awslambdaric"]
# Pass the name of the function handler as an argument to the runtime
CMD ["lambda_function.lambda_handler"]